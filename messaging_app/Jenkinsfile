pipeline {
    agent any

    environment {
        VENV = 'venv'
        DOCKER_IMAGE = "ken1422/messaging_app"
        DOCKER_CREDS = credentials('docker-creds')   // ID in Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/<your-username>/alx-backend-python.git',
                    credentialsId: 'github-creds'
            }
        }

        stage('Setup Environment') {
            steps {
                sh '''
                python3 -m venv ${VENV}
                . ${VENV}/bin/activate
                pip3 install --upgrade pip
                pip3 install -r alx-backend-python/messaging_app/requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                . ${VENV}/bin/activate
                pytest alx-backend-python/messaging_app/tests --junitxml=report.xml
                '''
            }
            post {
                always {
                    junit 'report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE:${BUILD_NUMBER} ./alx-backend-python/messaging_app"
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Login
                    sh "echo $DOCKER_CREDS_PSW | docker login -u $DOCKER_CREDS_USR --password-stdin"

                    // Push both versioned & latest tags
                    sh "docker push $DOCKER_IMAGE:${BUILD_NUMBER}"
                    sh "docker tag $DOCKER_IMAGE:${BUILD_NUMBER} $DOCKER_IMAGE:latest"
                    sh "docker push $DOCKER_IMAGE:latest"
                }
            }
        }
    }

    triggers {
        // manual trigger only
    }

    post {
        success {
            echo "✅ Build & Push successful. Image available on Docker Hub: $DOCKER_IMAGE"
        }
        failure {
            echo "❌ Build failed. Check Jenkins logs."
        }
    }
}
